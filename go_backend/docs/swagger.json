{
    "swagger": "2.0",
    "info": {
        "description": "This is a hunger at home application backend server.",
        "title": "Hunger At Home API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080/api",
    "basePath": "/v1",
    "paths": {
        "/company/addressCompanyAssociate/": {
            "post": {
                "description": "get companyAddress associate record info and parse them to db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Add a new record to company address associate table",
                "parameters": [
                    {
                        "description": "Add a record",
                        "name": "companyInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CompanyAddressRecordSignupInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    }
                }
            }
        },
        "/company/addressSignUp/": {
            "post": {
                "description": "get address info and parse them to db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Add a new address",
                "parameters": [
                    {
                        "description": "Add an address",
                        "name": "companyInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AddressSignupInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.Message"
                        }
                    }
                }
            }
        },
        "/company/companySignup/": {
            "post": {
                "description": "get company info and parse them to db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "company"
                ],
                "summary": "Add a new company",
                "parameters": [
                    {
                        "description": "Add a company",
                        "name": "companyInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CompanySignupInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SignupOutput"
                        }
                    },
                    "404": {
                        "description": "Can not find company",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Issue",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/login/{email}/{password}": {
            "get": {
                "description": "use email address and password to login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login using an existing account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "password",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LoginOutput"
                        }
                    },
                    "404": {
                        "description": "Can not find user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Issue",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/signup/": {
            "post": {
                "description": "get user info and parse them to db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add a new user",
                "parameters": [
                    {
                        "description": "Add a user",
                        "name": "userInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SignupInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SignupOutput"
                        }
                    },
                    "404": {
                        "description": "Can not find user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Issue",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/updateUserStatus/": {
            "post": {
                "description": "update status by userID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update a status from \"pending\" to {status}",
                "parameters": [
                    {
                        "description": "Update user status",
                        "name": "userInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SignupOutput"
                        }
                    },
                    "404": {
                        "description": "Can not find user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server Issue",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AddressSignupInput": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "model.CompanyAddressRecordSignupInput": {
            "type": "object",
            "properties": {
                "AddressID": {
                    "type": "string"
                },
                "CompanyID": {
                    "type": "string"
                }
            }
        },
        "model.CompanySignupInput": {
            "type": "object",
            "properties": {
                "companyName": {
                    "type": "string"
                },
                "einID": {
                    "type": "string"
                },
                "fedID": {
                    "type": "string"
                }
            }
        },
        "model.LoginOutput": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "model.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "message"
                }
            }
        },
        "model.SignupInput": {
            "type": "object",
            "properties": {
                "companyID": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "secureAnswer": {
                    "type": "string"
                },
                "secureQuestion": {
                    "type": "string"
                },
                "userIdentity": {
                    "type": "string"
                }
            }
        },
        "model.SignupOutput": {
            "type": "object",
            "properties": {
                "companyID": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "secureAnswer": {
                    "type": "string"
                },
                "secureQuestion": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "userIdentity": {
                    "type": "string"
                }
            }
        },
        "model.UpdateInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}